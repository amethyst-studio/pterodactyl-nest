{
  "name": "Node.js Universal",
  "description": "Universal nest egg for Node.js applications.",
  "features": null,
  "images": [
    "node:16-buster-slim",
    "node:14-buster-slim",
    "node:12-buster-slim"
  ],
  "file_denylist": [],
  "startup": "echo 'Installing Node.js Modules with Node Package Manager...'\nnpm install\nnode --max-old-space-size={{SERVER_MEMORY}} {{SCRIPT}}",
  "config": {
    "files": "{}",
    "startup": "{\"done\":\"[Pterodactyl] We are ready.\"}",
    "logs": "{\"custom\":true,\"location\":\"logs/latest.log\"}",
    "stop": "^C"
  },
  "scripts": {
    "installation": {
      "script": "echo \"Configuring Pterodactyl Node.js Application...\"\n\napt update &&\n  apt install -y git curl jq file unzip make gcc g++ python python-dev libtool\n\nmkdir -p /mnt/server/\ncd /mnt/server/\n\nif [ \"${UPDATE}\" == \"false\" ] || [ \"${UPDATE}\" == \"0\" ]; then\n  echo -e \"We will assume you are aware what you are doing and will deploy all required files manually.\"\n  echo -e \"If you wish to enable git auto updating, please reinstall the server with Update via Git enabled.\"\n  exit 0\nfi\n\nif [[ ${GIT_REMOTE} != *.git ]]; then\n  GIT_REMOTE=${GIT_REMOTE}.git\nfi\n\nif [ -z \"${GIT_USERNAME}\" ] && [ -z \"${GIT_ACCESS_TOKEN}\" ]; then\n  echo \"Git username and password are required to update via Git.\"\n  exit 1\nelse\n  GIT_REMOTE=https://${GIT_USERNAME}:${GIT_ACCESS_TOKEN}@$(echo -e ${GIT_REMOTE} | cut -d\\/ -f3-)\nfi\n\necho -e \"${GIT_REMOTE}\"",
      "container": "node:14-buster-slim",
      "entrypoint": "bash"
    }
  },
  "variables": [
    {
      "name": "Main Script",
      "description": "The name of the file to be executed with Node.js runtime. Using '.' will attempt to pull this from the package.json application.",
      "env_variable": "SCRIPT",
      "default_value": ".",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|max:512"
    },
    {
      "name": "Update via Git",
      "description": "If the runtime should attempt to automatically update your project by doing a hard clone of your remote. Local modifications will be lost on each startup.",
      "env_variable": "UPDATE",
      "default_value": 0,
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|boolean"
    },
    {
      "name": "Git Remote",
      "description": "The URL of upstream git host to clone from for 'Update via Git'.",
      "env_variable": "GIT_REMOTE",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "string|max:512"
    },
    {
      "name": "Username",
      "description": "The username to access the upstream git host.",
      "env_variable": "GIT_USERNAME",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "string|max:64"
    },
    {
      "name": "Access Token",
      "description": "The access token to access the upstream git host. You can use your password, but we greatly recommend access token if available.",
      "env_variable": "GIT_ACCESS_TOKEN",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "string|max:256"
    }
  ],
  "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
  "meta": {
    "version": "PTDL_v1",
    "update_url": null
  },
  "exported_at": "2021-08-21T23:57:34.549Z",
  "author": "postmaster@mxsrv.amethyst.live"
}