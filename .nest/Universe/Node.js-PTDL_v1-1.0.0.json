{
  "meta": {
    "version": "PTDL_v1"
  },
  "name": "Node.js",
  "nest": "Universe",
  "description": "Universe Node.js Runner for Pterodactyl. Built-in git update and forever-cli for rapid automated restarts.",
  "version": "1.0.0",
  "images": [
    "ghcr.io/amethyst-studio/yolks:node_12",
    "ghcr.io/amethyst-studio/yolks:node_14",
    "ghcr.io/amethyst-studio/yolks:node_15",
    "ghcr.io/amethyst-studio/yolks:node_16",
    "ghcr.io/amethyst-studio/yolks:node_17"
  ],
  "startup": "if [[ -d .git ]]&&[[ ${UPDATE} == '1' ]];then echo \"$ git config --global pull.rebase true\"&&git config --global pull.rebase true;echo \"$ git fetch --all\"&&git fetch --all;echo \"$ git reset --hard\"&&git reset --hard;echo \"$ git pull\"&&git pull;echo \"$ git ls-files --error-unmatch package-lock.json || rm -f ./package-lock.json\";git ls-files --error-unmatch package-lock.json||rm -f package-lock.json;fi;if [[ ${INSTALL_CORE} == '1' ]];then echo \"Installing core packages used for building other special packages.\";echo \"$ npm install --no-save node-gyp\"&&npm install --no-save node-gyp>/dev/null 2>&1;echo \"$ npm install --no-save @mapbox/node-pre-gyp\"&&npm install --no-save @mapbox/node-pre-gyp>/dev/null 2>&1;fi;if [[ ${INSTALL_ADDITIONAL} != \"\" ]];then echo \"$ npm install --no-save ${INSTALL_ADDITIONAL}\"&&npm install --no-save \"${INSTALL_ADDITIONAL}\">/dev/null 2>&1;fi;echo \"$ npm install --only=production\"&&npm install --only=production>/dev/null 2>&1;if [[ ${AUTOMATIC_RESTART} == '1' ]];then npx --yes --package=forever -c forever --minUptime=500 --spinSleepTime=1000 -c 'node --max-old-space-size={{SERVER_MEMORY}} {{SCRIPT}}';else node --max-old-space-size='{{SERVER_MEMORY}}' '{{SCRIPT}}';fi",
  "config": {
    "files": "{}",
    "startup": "{\"done\":\"[Pterodactyl] We are ready.\"}",
    "logs": "{}",
    "stop": "^^C"
  },
  "scripts": {
    "installation": {
      "script": "success(){ echo;echo 'The application has completed installation successfully. Please review the transaction log for any issue then start the service.';exit 0;};error(){ echo;echo 'The installation process failed due to an error. The reference code and error message are attached below.';echo;echo \"Reference Code: ${1}\";echo \"${2}\";echo;echo 'Please correct the above mentioned issues, or reach out to support.';echo 'Want to try again? Navigate to \"Settings\" and select \"Reinstall Server\" to attempt the install process once more.';exit 254;};echo '[amethyst-studio/pterodactyl-nest] Preparing to install the Node.js-configured environment.';echo '  Copyright (c) 2021 Samuel Voeller on behalf of Amethyst [Live] Studio.';echo '  Find the source at https://github.com/amethyst-studio/pterodactyl-nest';if [[ ${UPDATE} == 'false' ]]||[[ ${UPDATE} == '0' ]];then echo 'Skipping the git-based operations due to the updater variable being set to \"false\" or \"0\".';success;fi;echo;echo '$ mkdir /mnt/server/'&&mkdir -p /mnt/server;echo '$ cd /mnt/server/'&&cd /mnt/server||exit 254;if [[ ${GIT_REMOTE} != *.git ]];then GIT_REMOTE=\"${GIT_REMOTE}.git\";fi;if [[ -z ${GIT_REMOTE} ]]||[[ -z ${GIT_USERNAME} ]]||[[ -z ${GIT_ACCESS_TOKEN} ]];then error 'ERR_ENV_VARIABLE_MISSING' 'Ensure that the GIT_REMOTE, GIT_USERNAME, and GIT_ACCESS_TOKEN environment variables are set under the \"Startup\" view. These are all required for automatic updates.';else GIT_REMOTE=\"https://${GIT_USERNAME}:${GIT_ACCESS_TOKEN}@$(echo -e \"${GIT_REMOTE}\"|cut -d/ -f3-)\";fi;LS_MNT_SERVER=$(ls -A .);if [[ -n ${LS_MNT_SERVER} ]];then echo 'Detected files within '/mnt/server' and is now attempting to use the existing project.';if [[ -d .git ]];then echo 'Locating the persistent origin of the current project...';if [[ -f .git/config ]];then ORIGIN=$(git config --get remote.origin.url);echo 'Remote is '\"${ORIGIN}\"'';else error 'GIT_CONFIG_MISSING_OR_CORRUPT' 'Please test the '.git' folder integrity. It potentially is missing files or corrupted in some form.';fi;fi;fi;echo;echo '$ git config --global user.email report@amethyst.live'&&git config --global user.email 'report@amethyst.live';echo '$ git config --global user.name Amethyst Pterodactyl.io'&&git config --global user.name 'Amethyst Pterodactyl.io';echo \"$ git config --global pull.rebase true\"&&git config --global pull.rebase true;if [[ ${ORIGIN} != '' ]];then echo;echo '$ git remote set-url origin GIT_REMOTE'&&git remote set-url origin \"${GIT_REMOTE}\">/dev/null 2>&1;echo '$ git fetch --all'&&git fetch --all;echo '$ git reset --hard'&&git reset --hard;echo '$ git pull'&&git pull;success;else echo;echo \"$ git clone ${GIT_REMOTE} . --single-branch\"&&git clone \"${GIT_REMOTE}\" . --single-branch;success;fi",
      "container": "ghcr.io/amethyst-studio/yolks:node_core",
      "entrypoint": "bash"
    }
  },
  "variables": [
    {
      "name": "Initialization Script",
      "description": "The javascript to be executed with the Node.js runtime.",
      "env_variable": "SCRIPT",
      "default_value": "./index.js",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|max:512"
    },
    {
      "name": "Restart with Forever",
      "description": "If restarting via the \"forever\" cli should be used.",
      "env_variable": "AUTOMATIC_RESTART",
      "default_value": "0",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|boolean"
    },
    {
      "name": "NPM Core Packages",
      "description": "If core packages such as \"node-gyp\" and \"@mapbox/node-pre-gyp\" should be installed on each startup.",
      "env_variable": "INSTALL_CORE",
      "default_value": "0",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|boolean"
    },
    {
      "name": "NPM Additional Packages",
      "description": "Additional packages to be installed on each startup via \"npm install\".",
      "env_variable": "INSTALL_ADDITIONAL",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|max:4096"
    },
    {
      "name": "Update via Git",
      "description": "If the runtime should attempt to automatically update your project by doing a hard clone of your remote. Local modifications will be lost on each startup.",
      "env_variable": "UPDATE",
      "default_value": "0",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|boolean"
    },
    {
      "name": "Git Repository URL",
      "description": "The URL of upstream git repository to clone from for 'Update via Git'.",
      "env_variable": "GIT_REMOTE",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "string|max:512"
    },
    {
      "name": "Git Username",
      "description": "The username to access the upstream git host.",
      "env_variable": "GIT_USERNAME",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "string|max:64"
    },
    {
      "name": "Git Token",
      "description": "The access token or password to the upstream git host. Tokens are greatly recommend if available.",
      "env_variable": "GIT_ACCESS_TOKEN",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "string|max:256"
    }
  ],
  "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
  "exported_at": "2022-02-16T21:41:23.540Z",
  "author": "postmaster@mxsrv.amethyst.live"
}